dist: focal
env:
  - CTEST_OUTPUT_ON_FAILURE=1

before_script:
  # Extra module package is needed for vcan (virtual SocketCAN iface).
  - sudo apt-get install "linux-*-extra-$(uname -r)"

matrix:
  include:
    # socketcan/libcanard
    - language: cpp
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-10
            - g++-10-multilib
            - gcc-10-multilib
            - linux-libc-dev:i386
      env:
        - CC=gcc-10
        - CXX=g++-10
      script:
        - cd socketcan/libcanard/

        # DEBUG
        - cmake test -DCMAKE_BUILD_TYPE=Debug
        - make all VERBOSE=1 && make test
        - make clean

        # RELEASE
        - cmake test -DCMAKE_BUILD_TYPE=Release
        - make all VERBOSE=1 && make test
        - make clean

    # stm32/libcanard/bxcan/
    - language: cpp
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:  # Install a newer GCC because https://stackoverflow.com/a/51512150/1007777.
            - g++-10
            - g++-10-multilib
            - gcc-10-multilib
            - linux-libc-dev:i386
      script:
        - cd stm32/libcanard/bxcan/

        # Set up the toolchain.
        - wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh && sudo ./llvm.sh 10
        - sudo apt install clang-tidy-10 clang-format-10
        - clang++-10 -E -x c++ - -v < /dev/null    # Print the Clang configuration for troubleshooting purposes.

        # Static analysis.
        - clang-tidy-10 src/*.c --extra-arg='-DBXCAN_MAX_IFACE_INDEX=1' --extra-arg='-DBXCAN_BUSYWAIT_DELAY_SYSTEM_CORE_CLOCK=72000000'

        # Format check.
        - clang-format-10 -i -fallback-style=none -style=file --verbose src/*.[ch]
        - 'modified="$(git status --porcelain --untracked-files=no)"'
        - 'if [ -n "$modified" ]; then echo "Please format the code properly."; exit 1; fi'

git:
  depth: false
